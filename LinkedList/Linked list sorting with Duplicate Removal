//QUES - Writing a program to sort a given linked list and remove duplicate elements if any.
//An unsorted linked list is given to the user which may contain duplicate elements. 
//The final list contains all the unique elements in increasing order.


#include <bits/stdc++.h>
using namespace std;


class node
{
public:
    char data;
    node *next;

    node(char val)
    {
        data = val;
        next = NULL;
    }
};

void insertAtHead(node *&head, char val)
{
    node *n = new node(val);
    n->next = head;
    head = n;
}

void insertAtTail(node *&head, char val)
{
    node *n = new node(val);

    if (head == NULL)
    {
        head = n;
        return;
    }

    node *temp = head;
    while (temp->next != NULL)
    {
        temp = temp->next;
    }
    temp->next = n;
}

void display(node *head)
{
    if(head == NULL){
        return;
    }
    node *temp = head;
    while (temp != NULL)
    {
        if(temp->next != NULL){
            cout << temp->data << " -> ";
        }else{
            cout << temp->data ;
        }
        temp = temp->next;
    }
    cout <<endl;
}

void selectionSort(node* head)
{
    node* temp = head;
    while (temp) {
        node* min = temp;
        node* r = temp->next;
 
        while (r) {
            if (min->data > r->data)
                min = r;
            r = r->next;
        }
        char x = temp->data;
        temp->data = min->data;
        min->data = x;
        temp = temp->next;
    }
}

void duplicate(node* head){
    node* cur = head;
    
    while(cur->next){
        if(cur->data == cur->next->data){
            cur->next = cur->next->next;
        }else{
            cur = cur->next;
        }
    }
    return;
}

int main(){

    node* n = NULL;
    
    char num ;
    cin>>num;    
    if(num){
        do{
            insertAtTail(n,num);
        }while(cin>>num);
        insertAtTail(n,num);

        selectionSort(n);
        duplicate(n);    
        display(n);

    }
    return 0;
}
